Q: What happens when to initialize a repository? 

A: It creates a .git file that tracks all the changes you make to the files containted. 

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: The staging area is where you can add files before commiting them while the working directory is already committed. It offers the chance to check before commiting?

Q: How can you use the staging area to make sure you have one commit per logical change?

A: You can add single changes to the staging area and look at the difference between that commit and the master. you can see if other changes would fit in the same commit. 

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: You can use branches when you want to create a new test version and still keep a working version on the side. It would help by lettng you make changes while not messing up the original.

Q: How do the diagrams help you visualize the branch structure?

A: The diagrams help to show that branches are new lines of commits that are not connected to the main branch. You can checout and old commit, create a new commit off that old commit and then create a new branch by using "git checkout -b new_branch_name"

Q: What is the result of merging two branches togehter? Why do we represent the diagram the way that we do?

A: The result was breaking it... haha not sure what I did to fuck up or how to reverse it, but overall it results in the changes being merged together. 

Q: What are the pros and cons on Git's automatic mergin vs. always doing merges manually?

A: Git can notice all of the changes and auto merge what is obvious, other wise you mneed to go through each one which takes time. 



